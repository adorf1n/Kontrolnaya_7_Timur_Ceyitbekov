@model BookViewModel

<h1>Список книг</h1>

<form method="get">
    <input type="text" name="title" placeholder="Название книги" value="@Model.Filter.Title" />
    <input type="text" name="author" placeholder="Автор" value="@Model.Filter.Author" />
    <select name="isBorrowed">
        <option value="">Все</option>
        <!option value="true" @(Model.Filter.IsBorrowed == true ? "selected" : "")>Выданные</!option>
        <!option value="false" @(Model.Filter.IsBorrowed == false ? "selected" : "")>Доступные</!option>
    </select>
    <button type="submit">Фильтровать</button>
</form>

<div class="row">
    @foreach (var book in Model.Books)
    {
        <div class="col-md-4">
            <div class="card">
                <img src="@book.coverphoto" class="card-img-top" alt="@book.title" />
                <div class="card-body">
                    <h5 class="card-title">@book.title</h5>
                    <p class="card-text">Автор: @book.author</p>
                    <p class="card-text">Статус: @(book.isborrowed ? "Выдана" : "Доступна")</p>
                    <a href="@Url.Action("Details", new { id = book.id })" class="btn btn-primary">Подробнее</a>
                </div>
            </div>
        </div>
    }
</div>

<div class="pagination">
    @for (int i = 1; i <= Math.Ceiling((double)Model.TotalBooks / Model.PageSize); i++)
    {
        <a href="@Url.Action("Index", new { page = i, title = Model.Filter.Title, author = Model.Filter.Author, isBorrowed = Model.Filter.IsBorrowed })">@i</a>
    }
</div>
